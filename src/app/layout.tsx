import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ConfigProvider } from "antd";
import { AntdRegistry } from "@ant-design/nextjs-registry";

// Require for Mantine core

import { MantineProvider, ColorSchemeScript } from "@mantine/core";

import { DatesProvider } from "@mantine/dates";
import "@mantine/core/styles.css"; // mantine core
import "@mantine/dates/styles.css"; //mantine dates
import "@mantine/carousel/styles.css"; // mantine carousel

// Require for Mantine core

//import Redux

import ReduxProvider from "@/components/redux/ReduxProvider";

//import Redux End
import { AppRouterCacheProvider } from "@mui/material-nextjs/v13-appRouter";
import { cookies } from "next/headers";
import { decrypt, SessionPayload } from "@/lib/session";
import { mantineTheme } from "@/lib/theme";
import MantineCustomThemeProvider from "@/components/lib/MantineCustomThemeProvider";
import axios, { AxiosResponse } from "axios";
import { UserRedux } from "@/types/dto/user.dto";
import { error } from "console";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookiesStore = cookies(); // Get Cookie on SSR

  const authCookie = await decrypt(cookiesStore.get("user")?.value as string); // Decrypt JWT

  console.log(1235);

  const authInfo: any = await axios
    .get(
      `${process.env.NEXT_PUBLIC_BACKEND_SERVER}/api/users/${authCookie?.sub}`,
      { withCredentials: true }
    )
    .catch(function (err) {
      console.log(err);
    });

  console.log(
    `${process.env.NEXT_PUBLIC_BACKEND_SERVER}/api/users/${authCookie?.sub}`
  );

  console.log("Auth Info");

  console.log(authInfo);

  return (
    <html lang="en">
      <head>
        <ColorSchemeScript></ColorSchemeScript>
      </head>
      <body className={inter.className}>
        <AppRouterCacheProvider>
          <AntdRegistry>
            <ConfigProvider
              theme={{
                token: {
                  colorPrimary: "#faad14",
                },
                components: {
                  Form: {
                    itemMarginBottom: 0,
                  },
                  Button: {
                    // colorBgBase: "#ffb700",
                  },
                },
              }}
            >
              <DatesProvider settings={{ locale: "vi" }}>
                <ReduxProvider authInfo={authInfo?.data?.result}>
                  <MantineProvider theme={mantineTheme}>
                    {children}
                  </MantineProvider>
                </ReduxProvider>
              </DatesProvider>
            </ConfigProvider>
          </AntdRegistry>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
